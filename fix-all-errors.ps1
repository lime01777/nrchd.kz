# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏ const –∏ —Ñ—É–Ω–∫—Ü–∏–π t

Write-Host "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏ const –∏ —Ñ—É–Ω–∫—Ü–∏–π t..." -ForegroundColor Green
Write-Host ""

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
$filesToFix = @(
    # –°—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π (Direction)
    "resources\js\Pages\Direction\MedicalEducation.jsx",
    "resources\js\Pages\Direction\HumanResources.jsx",
    "resources\js\Pages\Direction\ElectronicHealth.jsx",
    "resources\js\Pages\Direction\MedicalAccreditation.jsx",
    "resources\js\Pages\Direction\HealthRate.jsx",
    "resources\js\Pages\Direction\ClinicalProtocols.jsx",
    "resources\js\Pages\Direction\MedicalScience.jsx",
    "resources\js\Pages\Direction\Bioethics.jsx",
    "resources\js\Pages\Direction\DrugPolicy.jsx",
    "resources\js\Pages\Direction\PrimaryHealthCare.jsx",
    "resources\js\Pages\Direction\HealthAccounts.jsx",
    "resources\js\Pages\Direction\CenterPrevention.jsx",
    "resources\js\Pages\Direction\TechCompetence.jsx",
    
    # –°—Ç—Ä–∞–Ω–∏—Ü—ã —É—Å–ª—É–≥ (Services)
    "resources\js\Pages\Services\Training.jsx",
    "resources\js\Pages\Services\MedicalExpertise.jsx",
    "resources\js\Pages\Services\HealthTechAssessment.jsx",
    "resources\js\Pages\Services\DrugExpertise.jsx",
    "resources\js\Pages\Services\AdsEvaluation.jsx",
    
    # –°—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–æ–≤–æ—Å—Ç–µ–π (News)
    "resources\js\Pages\News\Show.jsx",
    "resources\js\Pages\News\Index.jsx",
    
    # –°—Ç—Ä–∞–Ω–∏—Ü—ã –æ —Ü–µ–Ω—Ç—Ä–µ (AboutCentre)
    "resources\js\Pages\AboutCentre\Vacancy.jsx",
    "resources\js\Pages\AboutCentre\Vacancies.jsx",
    "resources\js\Pages\AboutCentre\SalidatKairbekova.jsx",
    "resources\js\Pages\AboutCentre\Partners.jsx",
    "resources\js\Pages\AboutCentre\FAQ.jsx",
    "resources\js\Pages\AboutCentre\Contacts.jsx"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
function Fix-File {
    param([string]$FilePath)
    
    if (-not (Test-Path $FilePath)) {
        Write-Host "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $FilePath" -ForegroundColor Red
        return @{ Success = $false; Error = "File not found" }
    }
    
    try {
        $content = Get-Content $FilePath -Raw -Encoding UTF8
        $lines = Get-Content $FilePath -Encoding UTF8
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        $hasLayout = $content -match "\.layout\s*="
        $hasGlobalT = $content -match "const\s+t\s*=\s*\(.*\)\s*=>\s*\{[\s\S]*?window\.__INERTIA_PROPS__"
        $usesTInLayout = $hasLayout -and ($content -match "\.layout\s*=\s*.*t\(")
        
        if (-not $hasLayout -or $hasGlobalT -or -not $usesTInLayout) {
            return @{ Success = $false; Error = "No fix needed" }
        }
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–º–ø–æ—Ä—Ç
        $lastImportIndex = -1
        for ($i = $lines.Count - 1; $i -ge 0; $i--) {
            if ($lines[$i].Trim().StartsWith("import")) {
                $lastImportIndex = $i
                break
            }
        }
        
        if ($lastImportIndex -eq -1) {
            return @{ Success = $false; Error = "No imports found" }
        }
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        $newLines = @($lines)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é t –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤
        $globalTFunction = @(
            "",
            "// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞",
            "const t = (key, fallback = '') => {",
            "    return window.__INERTIA_PROPS__?.translations?.[key] || fallback;",
            "};",
            ""
        )
        
        $newLines = $newLines[0..$lastImportIndex] + $globalTFunction + $newLines[($lastImportIndex + 1)..($newLines.Count - 1)]
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç—Ä–æ–∫–∏
        $newContent = $newLines -join "`n"
        
        # –ó–∞–º–µ–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é t –Ω–∞ tComponent (–µ—Å–ª–∏ –µ—Å—Ç—å)
        $newContent = $newContent -replace "const\s+t\s*=\s*\(.*?\)\s*=>\s*\{[\s\S]*?translations\?\.[^\}]*\|\|.*?\};", "// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞`n    const tComponent = (key, fallback = '') => {`n        return translations?.[key] || fallback;`n    };"
        
        # –ó–∞–º–µ–Ω—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –Ω–∞ tComponent (–Ω–æ –Ω–µ –≤ layout)
        $componentParts = $newContent -split "export default function"
        if ($componentParts.Count -gt 1) {
            $beforeComponent = $componentParts[0]
            $afterComponent = $componentParts[1]
            
            # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            $fixedAfterComponent = $afterComponent -replace "(?<!\.layout\s*=.*)t\(", "tComponent("
            
            $newContent = $beforeComponent + "export default function" + $fixedAfterComponent
        }
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        Set-Content -Path $FilePath -Value $newContent -Encoding UTF8
        
        return @{ Success = $true; FilePath = $FilePath }
        
    } catch {
        return @{ Success = $false; Error = $_.Exception.Message }
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
$successCount = 0
$errorCount = 0
$results = @()

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
$backupDir = ".\backups_" + (Get-Date -Format "yyyy-MM-dd_HH-mm-ss")
if (-not (Test-Path $backupDir)) {
    New-Item -ItemType Directory -Path $backupDir | Out-Null
}

Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: $backupDir" -ForegroundColor Yellow
Write-Host ""

for ($i = 0; $i -lt $filesToFix.Count; $i++) {
    $filePath = $filesToFix[$i]
    Write-Host "[$($i + 1)/$($filesToFix.Count)] –û–±—Ä–∞–±–æ—Ç–∫–∞: $filePath" -ForegroundColor Cyan
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if (Test-Path $filePath) {
        $backupPath = Join-Path $backupDir (Split-Path $filePath -Leaf) + ".backup"
        try {
            Copy-Item $filePath $backupPath
        } catch {
            Write-Host "   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: $($_.Exception.Message)" -ForegroundColor Yellow
        }
    }
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    $result = Fix-File $filePath
    
    if ($result.Success) {
        Write-Host "   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: $filePath" -ForegroundColor Green
        $successCount++
        $results += @{ FilePath = $filePath; Status = "success" }
    } else {
        Write-Host "   ‚ùå –û—à–∏–±–∫–∞: $filePath - $($result.Error)" -ForegroundColor Red
        $errorCount++
        $results += @{ FilePath = $filePath; Status = "error"; Error = $result.Error }
    }
}

# –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
Write-Host ""
Write-Host "üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" -ForegroundColor Magenta
Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: $successCount" -ForegroundColor Green
Write-Host "‚ùå –û—à–∏–±–æ–∫: $errorCount" -ForegroundColor Red
Write-Host "üìÅ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $($filesToFix.Count)" -ForegroundColor Blue

# –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if ($successCount -gt 0) {
    Write-Host ""
    Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:" -ForegroundColor Green
    $results | Where-Object { $_.Status -eq "success" } | ForEach-Object {
        Write-Host "   - $($_.FilePath)" -ForegroundColor White
    }
}

# –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏
if ($errorCount -gt 0) {
    Write-Host ""
    Write-Host "‚ùå –§–∞–π–ª—ã —Å –æ—à–∏–±–∫–∞–º–∏:" -ForegroundColor Red
    $results | Where-Object { $_.Status -eq "error" } | ForEach-Object {
        Write-Host "   - $($_.FilePath): $($_.Error)" -ForegroundColor White
    }
}

Write-Host ""
Write-Host "üíæ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $backupDir" -ForegroundColor Yellow
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ!" -ForegroundColor Blue
Write-Host "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green

# –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏
Write-Host ""
Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
