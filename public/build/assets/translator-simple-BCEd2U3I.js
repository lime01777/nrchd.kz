import{l as v}from"./app-BmcByq3p.js";const u={};function N(t){try{const o=`translationCache_${t}`,e=localStorage.getItem(o),r=localStorage.getItem("site_translations_cache");if(e){const n=JSON.parse(e);return console.log(`[Translator] Loaded ${Object.keys(n).length} translations for ${t} from localStorage`),n}else if(r){console.log(`[Translator] Migrating old cache format to new format for ${t}`);const n=JSON.parse(r);return I(n,t),localStorage.removeItem("site_translations_cache"),n}}catch(o){console.error(`[Translator] Failed to load translations for ${t} from localStorage:`,o)}return{}}Object.assign(u,N());function I(t,o){try{const e=`translationCache_${o}`,r=localStorage.getItem(e),a={...r?JSON.parse(r):{},...t};localStorage.setItem(e,JSON.stringify(a)),console.log(`[Переводчик] Сохранено ${Object.keys(t).length} переводов на язык ${o} в кэш`),console.log(`[Translator] Saved ${Object.keys(a).length} translations to localStorage for ${o}`)}catch(e){console.error("[Переводчик] Ошибка сохранения кэша:",e)}}setInterval(()=>{const t=Object.keys(u).length;if(t>5e3){console.log(`[Translator] Cache too large (${t} items), optimizing before save`);return}Object.keys(u).forEach(o=>{const e=o.split("_")[1],r={[o]:u[o]};I(r,e)})},6e4);const E=t=>{},_=(t,o)=>{if(!t||t.trim()==="")return t;const e=t.trim(),r=`${e}_${o}`;if(u[r])return u[r];try{const n=`translationCache_${o}`,a=localStorage.getItem(n);if(a){const s=JSON.parse(a);if(s[e])return u[r]=s[e],s[e]}}catch(n){console.error(`[Translator] Ошибка чтения кэша переводов для ${o}:`,n)}return null},A=(t,o,e)=>{if(!t||t.trim()===""||!e)return;const r=t.trim(),n=`${r}_${o}`;u[n]=e;try{const s=`translationCache_${o}`,i=localStorage.getItem(s),m=i?JSON.parse(i):{};m[r]=e,localStorage.setItem(s,JSON.stringify(m))}catch(s){console.error(`[Translator] Ошибка сохранения в кэш перевода для ${o}:`,s)}Object.keys(u).length%50===0&&setTimeout(saveLocalTranslations,1e3)},J=async(t,o={},e=null,r=!1)=>{var m;console.time("page-translation");const n=v.determineCurrentLanguage();console.log(`[Переводчик] Применяем перевод с ${n} на ${t}${r?" (принудительно)":""}`);const a=`translationCache_${t}`;r&&(console.log(`[Translator] Принудительная очистка кэша для языка: ${t}`),localStorage.removeItem(a),localStorage.removeItem(`translations_${t}`));let s=N(t);if(o&&Object.keys(o).length>0&&(s={...s,...o}),x().length===0){console.log("[Переводчик] Нет элементов для перевода"),e&&e();return}v.syncLanguageStorage(t);try{const c=document.createElement("style");c.textContent=`
      body > div:not(.main-container):not(.container):not(.wrapper):not([class*="component"]):not([id*="component"]) {
          display: none !important;
          visibility: hidden !important;
          opacity: 0 !important;
          height: 0 !important;
          width: 0 !important;
          overflow: hidden !important;
          pointer-events: none !important;
          position: absolute !important;
          top: -9999px !important;
      }
    `,document.head.appendChild(c);const k=["Перевод страницы","Прогресс:","Найдено","Тестирование API","CSRF токен","Перевод элемента","Инициализация"],z=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null,!1),S=[];let f;for(;f=z.nextNode();)k.some(l=>f.nodeValue&&f.nodeValue.includes(l))&&S.push(f);S.forEach(l=>{l.parentNode&&l.parentNode.removeChild(l)});const T=x();E(`Найдено ${T.length} элементов для перевода`);const C=(m=document.querySelector('meta[name="csrf-token"]'))==null?void 0:m.getAttribute("content");if(!C){console.error("CSRF токен не найден. Добавьте мета-тег csrf-token в head.");return}const p=K();let g=0;const b=T.length,$={};for(const l of T){const d=l.innerText.trim();if(!d||d.length<2)continue;const y=_(d,t);if(y){l.setAttribute("data-original-text",d),l.innerText=y,$[d]=y,g++,w(p,g/b);continue}try{const h=await j(d,"ru",t,C);h&&(l.setAttribute("data-original-text",d),l.innerText=h,$[d]=h,A(d,t,h))}catch(h){E(`Ошибка перевода: ${h.message}`)}g++,w(p,g/b)}p&&p.parentNode&&p.parentNode.removeChild(p),c&&c.parentNode&&c.parentNode.removeChild(c),setTimeout(saveLocalTranslations,1e3),e&&e(),console.timeEnd("page-translation"),console.log(`[Translator] Translation completed: ${g} elements translated to ${t}`)}catch(c){console.error("[Translator] Translation error:",c),e&&e(c)}},x=()=>{const t=[],o=["h1","h2","h3","h4","h5","h6","p","a","span","li","button","label","th","td","div.text-content",".translate-this",'[data-translate="true"]',".text-lg",".text-sm",".text-xl",".text-base",".card-title",".card-text",".page-title","div.content > *",".description",".subtitle"],e=["script","style","pre","code",'[data-no-translate="true"]','[contenteditable="true"]',"input","textarea",".no-translate",".notranslate",'[lang="en"].no-translate-override',"svg","path","circle","rect",".language-switcher *",".code",".api-token",".url-path","iframe","canvas",".react-code",".code-sample"],r=[".no-translate-container",".code-block","pre","code",".notranslate",'[data-no-translate="true"]'],n=e.join(", ");return o.forEach(a=>{try{document.querySelectorAll(a).forEach(i=>{!i.closest(n)&&i.innerText&&i.innerText.trim()&&(r.some(c=>i.closest(c)!==null)||t.push(i))})}catch(s){console.error(`Error selecting ${a}:`,s)}}),console.log(`[Translator] Found ${t.length} translatable elements`),t},K=()=>{const t=document.createElement("div");t.id="translation-progress",t.style.cssText="position: fixed; top: 10px; right: 10px; background: rgba(0,0,0,0.7); color: white; padding: 10px; border-radius: 4px; z-index: 9999; max-width: 300px;";const o=document.createElement("div");o.textContent="Перевод страницы",o.style.cssText="font-weight: bold; margin-bottom: 5px;",t.appendChild(o);const e=document.createElement("div");e.style.cssText="width: 100%; height: 8px; background: #444; border-radius: 4px; overflow: hidden;",t.appendChild(e);const r=document.createElement("div");r.style.cssText="width: 0%; height: 100%; background: #4CAF50; transition: width 0.2s;",e.appendChild(r);const n=document.createElement("div");return n.textContent="0%",n.style.cssText="margin-top: 5px; font-size: 12px; text-align: center;",t.appendChild(n),document.body.appendChild(t),t.barElement=r,t.textElement=n,t},w=(t,o)=>{if(!t)return;const e=Math.min(100,Math.round(o*100));t.barElement.style.width=`${e}%`,t.textElement.textContent=`${e}%`},j=async(t,o,e,r)=>{if(!t||t.trim()==="")return t;try{const n=await fetch("/api/translate",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":r},body:JSON.stringify({text:t,source:o,target:e,cache:!0})});if(!n.ok)throw new Error(`API error: ${n.status}`);const a=await n.json();if(a.success&&a.translation)return a.translation;throw new Error(a.message||"Unknown translation error")}catch(n){return console.error("Translation API error:",n),null}},P=t=>{if(!t||Object.keys(t).length===0)return;const o=x();let e=0;o.forEach(r=>{const n=r.innerText.trim();n&&t[n]&&(r.setAttribute("data-original-text",n),r.innerText=t[n],e++)}),console.log(`[Translator] Applied ${e} stored translations`)},F=t=>{const o=document.querySelectorAll(".language-switcher button");o.length!==0&&o.forEach(e=>{const r=e.getAttribute("data-lang");e.classList.remove("active","selected"),r===t&&e.classList.add("active","selected")})},B={getCachedTranslation:_,saveToCache:A,translateTextViaAPI:j,applyStoredTranslations:P,updateButtonStyles:F,getTranslatableElements:x};let O=localStorage.getItem("preferredLanguage")||"ru";const D={get currentLanguage(){return O},set currentLanguage(t){O=t}},M={translatePage:J,translatorHelpers:B,translatorState:D};export{M as default,I as saveTranslationsToCache,J as translatePage,B as translatorHelpers,D as translatorState};
