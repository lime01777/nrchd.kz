const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/app-BGV13jIE.js","assets/app-CB815Ifq.css"])))=>i.map(i=>d[i]);
import{_ as h}from"./app-BGV13jIE.js";const d=["ru","kz","en"],c="ru";class f{constructor(){this.currentLanguage=c,this.previousLanguage=c,this.translationCache={},this.initialized=!1,this.localTranslations=this.loadLocalTranslations(),this.pageTranslations={},this.lastCacheClear=Date.now()}init(){if(this.initialized){console.log("[LanguageManager] Already initialized, skipping");return}this.currentLanguage=this.getSavedLanguage(),console.log(`[LanguageManager] Initial language from storage: ${this.currentLanguage}`);const t=new URLSearchParams(window.location.search).get("lang");t&&d.includes(t)&&(console.log(`[LanguageManager] Using language from URL param: ${t}`),this.currentLanguage=t,this.saveLanguagePreference(t)),document.documentElement.setAttribute("data-language",this.currentLanguage),this.updateLanguageButtons(),this.initialized=!0,this.syncLanguageWithServer(),this.currentLanguage!==c&&this.applyLanguage(),console.log(`[LanguageManager] Initialized with language: ${this.currentLanguage}`)}getSavedLanguage(){var o;const e=localStorage.getItem("preferredLanguage");if(e&&d.includes(e))return console.log(`[LanguageManager] Found language in localStorage: ${e}`),e;const r=new URLSearchParams(window.location.search).get("lang");if(r&&d.includes(r))return console.log(`[LanguageManager] Found language in URL params: ${r}`),this.saveLanguagePreference(r),r;const s=document.cookie.split(";");for(let n=0;n<s.length;n++){const i=s[n].trim().split("=");if(i[0]==="language"&&i[1]&&d.includes(i[1]))return console.log(`[LanguageManager] Found language in cookies: ${i[1]}`),localStorage.setItem("preferredLanguage",i[1]),i[1]}const a=(o=document.querySelector('meta[name="x-app-locale"]'))==null?void 0:o.getAttribute("content");return a&&d.includes(a)?(console.log(`[LanguageManager] Found language in meta tag: ${a}`),a):(console.log(`[LanguageManager] No saved language found, using default: ${c}`),c)}saveLanguagePreference(e){if(!d.includes(e)){console.error(`[LanguageManager] Invalid language: ${e}`);return}try{localStorage.setItem("preferredLanguage",e),console.log(`[LanguageManager] Language saved to localStorage: ${e}`)}catch(r){console.error("[LanguageManager] Error saving to localStorage:",r)}try{sessionStorage.setItem("preferredLanguage",e)}catch(r){console.error("[LanguageManager] Error saving to sessionStorage:",r)}const t=new Date;t.setDate(t.getDate()+30),document.cookie=`language=${e}; expires=${t.toUTCString()}; path=/; SameSite=Lax`,console.log(`[LanguageManager] Language saved to cookies: ${e}`),this.currentLanguage=e,document.documentElement.setAttribute("data-language",e)}async syncLanguageWithServer(){var e;try{const t=(e=document.querySelector('meta[name="csrf-token"]'))==null?void 0:e.getAttribute("content");if(!t){console.error("[LanguageManager] CSRF token not found");return}const r=await fetch("/api/set-language",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":t},body:JSON.stringify({language:this.currentLanguage}),credentials:"include"});if(!r.ok)throw new Error(`Server returned ${r.status}: ${r.statusText}`);const s=await r.json();console.log(`[LanguageManager] Language synced with server: ${this.currentLanguage}`,s);let a=document.querySelector('meta[name="x-app-locale"]');return a||(a=document.createElement("meta"),a.setAttribute("name","x-app-locale"),document.head.appendChild(a)),a.setAttribute("content",this.currentLanguage),s}catch(t){console.error("[LanguageManager] Error syncing language with server:",t)}}getCurrentLanguage(){return this.currentLanguage}revertToLastLanguage(){return this.previousLanguage&&this.previousLanguage!==this.currentLanguage?(console.log(`[LanguageManager] Reverting to previous language: ${this.previousLanguage}`),this.currentLanguage=this.previousLanguage,document.documentElement.setAttribute("data-language",this.previousLanguage),this.updateLanguageButtons(),!0):!1}async switchLanguage(e,t=!0){if(console.time("switchLanguage"),!d.includes(e)){console.error(`[LanguageManager] Invalid language: ${e}`);return}if(this.currentLanguage===e){console.log(`[LanguageManager] Language already set to ${e}`);return}t&&this.showLanguageLoader(!0),this.previousLanguage=this.currentLanguage,console.log(`[LanguageManager] Switching from ${this.previousLanguage} to ${e}`),this.currentLanguage=e,this.saveLanguagePreference(e);try{await this.syncLanguageWithServer(),await this.applyLanguage(),this.updateUrlWithLanguage(),this.updateLanguageButtons(),t&&this.showLanguageLoader(!1),document.dispatchEvent(new CustomEvent("language-changed",{detail:{language:e}})),console.timeEnd("switchLanguage")}catch(r){console.error("[LanguageManager] Error during language switch:",r),t&&this.showLanguageLoader(!1)}}async translateText(e,t,r){var o;if(!e||e.trim()==="")return e;const s=`${e}_${r}`,a=localStorage.getItem(s);if(a)return console.log(`[LanguageManager] Using cached translation for: ${e.substring(0,30)}...`),a;try{const n=(o=document.querySelector('meta[name="csrf-token"]'))==null?void 0:o.getAttribute("content");if(!n)return console.error("[LanguageManager] CSRF token not found for translation"),e;const i=await fetch("/api/translate",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":n},body:JSON.stringify({text:e,source:t,target:r,cache:!0})});if(!i.ok)throw new Error(`Translation request failed: ${i.status} ${i.statusText}`);const l=await i.json();return l.success&&l.translation?(localStorage.setItem(s,l.translation),l.translation):(console.error(`[LanguageManager] Translation error: ${l.message||"Unknown error"}`),e)}catch(n){return console.error(`[LanguageManager] Error translating text: ${n.message}`),e}}async applyLanguage(){console.time("language-switch");const e=this.getSavedLanguage();if(e!==this.currentLanguage&&(console.log(`[LanguageManager] Language mismatch: current=${this.currentLanguage}, saved=${e}`),this.currentLanguage=e),document.documentElement.setAttribute("data-language",this.currentLanguage),this.currentLanguage===c){console.log(`[LanguageManager] Using default language: ${c}`),console.timeEnd("language-switch");return}console.log(`[LanguageManager] Applying language: ${this.currentLanguage}`);try{const t=this.loadLocalTranslations();this.fetchPageTranslations().then(r=>{r&&Object.keys(r).length>0&&this.saveLocalTranslations(r)}).catch(r=>{console.error("[LanguageManager] Failed to fetch page translations:",r)}),console.log(`[LanguageManager] Translating page to ${this.currentLanguage} using cached translations`);try{const{translatePage:r}=await h(async()=>{const{translatePage:s}=await import("./app-BGV13jIE.js").then(a=>a.n);return{translatePage:s}},__vite__mapDeps([0,1]));await r(this.currentLanguage,t,()=>{console.log("[LanguageManager] Translation completed"),this.translateSpecialComponents(t)})}catch(r){console.error("[LanguageManager] Translation error:",r)}console.timeEnd("language-switch"),this.registerContentObserver()}catch(t){console.error("[LanguageManager] Error applying language:",t)}}loadLocalTranslations(){try{const e=localStorage.getItem("siteTranslations");if(e){const t=JSON.parse(e);return console.log("[LanguageManager] Loaded local translations:",Object.keys(t).length),t}}catch(e){console.error("[LanguageManager] Error loading local translations:",e),localStorage.removeItem("siteTranslations")}return{}}saveLocalTranslations(e){try{const t={...this.localTranslations,...e};this.localTranslations=t,localStorage.setItem("siteTranslations",JSON.stringify(t)),console.log("[LanguageManager] Saved local translations:",Object.keys(t).length)}catch(t){console.error("[LanguageManager] Error saving local translations:",t)}}async fetchPageTranslations(){var e;try{const t=window.location.pathname,r=`pageTranslations_${this.currentLanguage}_${t}`,s=localStorage.getItem(r);if(s)try{const i=JSON.parse(s);if(i&&Object.keys(i).length>0)return console.log(`[LanguageManager] Using ${Object.keys(i).length} cached translations for ${this.currentLanguage} on page ${t}`),i}catch(i){console.error("[LanguageManager] Error parsing cached translations:",i),localStorage.removeItem(r)}const a=(e=document.querySelector('meta[name="csrf-token"]'))==null?void 0:e.getAttribute("content");if(!a)return console.error("[LanguageManager] CSRF token not found"),{};console.log(`[LanguageManager] Fetching translations for ${this.currentLanguage} from server for page ${t}`);const o=await fetch("/api/page-translations",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":a},body:JSON.stringify({page_url:t,language:this.currentLanguage,save_all:!0}),credentials:"include"});if(!o.ok)throw new Error(`Failed to fetch translations: ${o.status} ${o.statusText}`);const n=await o.json();if(n.success&&n.translations){try{localStorage.setItem(r,JSON.stringify(n.translations)),localStorage.setItem(`${r}_updated`,new Date().toISOString()),n.saved_count&&console.log(`[LanguageManager] Server saved ${n.saved_count} translations for future use`)}catch(i){console.error("[LanguageManager] Error caching translations:",i)}return n.translations}else return console.log(`[LanguageManager] No translations found for ${this.currentLanguage}`),{}}catch(t){return console.error("[LanguageManager] Error fetching translations:",t),{}}}saveTranslationsToServer(e,t){var s;if(!e||Object.keys(e).length===0){console.log("[LanguageManager] No translations to save");return}const r=(s=document.querySelector('meta[name="csrf-token"]'))==null?void 0:s.getAttribute("content");if(!r){console.error("[LanguageManager] CSRF token not found, cannot save translations");return}console.log(`[LanguageManager] Saving ${Object.keys(e).length} translations to server for page ${t}`),fetch("/api/page-translations",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":r},body:JSON.stringify({page_url:t,language:this.currentLanguage,save_all:!0,translations:e}),credentials:"include"}).then(a=>{if(!a.ok)throw new Error(`Failed to save translations: ${a.status} ${a.statusText}`);return a.json()}).then(a=>{if(a.success){console.log(`[LanguageManager] Successfully saved ${a.saved_count||Object.keys(e).length} translations for future use`);const o=`pageTranslations_${this.currentLanguage}_${t}`;try{const n=localStorage.getItem(o);if(n){const l={...JSON.parse(n),...e};localStorage.setItem(o,JSON.stringify(l)),localStorage.setItem(`${o}_updated`,new Date().toISOString())}}catch(n){console.error("[LanguageManager] Error updating local cache:",n)}}else console.error("[LanguageManager] Failed to save translations:",a)}).catch(a=>{console.error("[LanguageManager] Error saving translations:",a)})}updateUrlWithLanguage(){console.log("[LanguageManager] URL update with language parameter is disabled")}async translatePageContent(e={}){if(!e||Object.keys(e).length===0){console.log("[LanguageManager] No translations provided");return}const t=this.collectTextElements();console.log(`[LanguageManager] Translating ${t.length} elements using ${Object.keys(e).length} translations`);const r={},s={},a=window.location.pathname;for(const n of t){const i=n.originalText;if(!(!i||i.trim()==="")&&!(/^\d+$/.test(i)||i.length<=2))if(e[i]){const l=e[i];n.node.nodeType===Node.TEXT_NODE?n.node.nodeValue=l:n.node.nodeType===Node.ELEMENT_NODE&&(n.attributeName?n.node.setAttribute(n.attributeName,l):n.node.innerText=l)}else r[i]=""}const o=Object.keys(r);if(o.length>0){console.log(`[LanguageManager] Translating ${o.length} new texts`);const n=10,i=[];for(let l=0;l<o.length;l+=n)i.push(o.slice(l,l+n));for(const l of i)await Promise.all(l.map(async g=>{try{const u=await this.translateText(g,c,this.currentLanguage);u&&(s[g]=u)}catch(u){console.error(`[LanguageManager] Error translating text: ${g}`,u)}}));for(const l of t){const g=l.originalText;if(s[g]){const u=s[g];l.node.nodeType===Node.TEXT_NODE?l.node.nodeValue=u:l.node.nodeType===Node.ELEMENT_NODE&&(l.attributeName?l.node.setAttribute(l.attributeName,u):l.node.innerText=u)}}Object.assign(e,s),Object.keys(s).length>0&&this.saveTranslationsToServer(s,a)}return e}collectTextElements(){const e=[];return document.querySelectorAll("[data-translate]").forEach(a=>{var i;if(a.getAttribute("data-no-translate")==="true")return;const o=(i=a.innerText)==null?void 0:i.trim();o&&o.length>0&&e.push({node:a,originalText:o,attributeName:null});const n=a.getAttribute("data-translate-attrs");n&&n.split(",").forEach(l=>{l=l.trim();const g=a.getAttribute(l);g&&g.trim().length>0&&e.push({node:a,originalText:g,attributeName:l})})}),document.querySelectorAll("[data-i18n]").forEach(a=>{var n;const o=(n=a.innerText)==null?void 0:n.trim();o&&o.length>0&&e.push({node:a,originalText:o,attributeName:null})}),document.querySelectorAll(".translatable").forEach(a=>{var n;const o=(n=a.innerText)==null?void 0:n.trim();o&&o.length>0&&e.push({node:a,originalText:o,attributeName:null})}),console.log(`[LanguageManager] Collected ${e.length} text elements for translation`),e}getAllTextNodes(e){const t=[],r=document.createTreeWalker(e,NodeFilter.SHOW_TEXT,{acceptNode:s=>{if(!s.textContent.trim())return NodeFilter.FILTER_REJECT;const a=s.parentElement;if(!a)return NodeFilter.FILTER_REJECT;const o=a.tagName.toLowerCase();return o==="script"||o==="style"||o==="noscript"||o==="pre"||o==="code"||a.getAttribute("data-no-translate")!==null?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}});for(;r.nextNode();)r.currentNode.textContent.trim().length>2&&t.push(r.currentNode);return t}registerContentObserver(){if(this.observer&&this.observer.disconnect(),this.currentLanguage===c)return;const e=localStorage.getItem(`pageTranslations_${this.currentLanguage}`);if(!e)return;let t;try{t=JSON.parse(e)}catch(a){console.error("[LanguageManager] Error parsing cached translations:",a);return}const r=500;let s=null;this.observer=new MutationObserver(a=>{clearTimeout(s),s=setTimeout(()=>{for(const o of a)if(o.type==="childList"&&o.addedNodes.length>0){for(const n of o.addedNodes)if(n.nodeType===Node.ELEMENT_NODE){const i=this.getAllTextNodes(n);for(const l of i){const g=l.textContent.trim();g.length<3||t[g]&&(l.textContent=l.textContent.replace(g,t[g]))}this.checkAndTranslateSpecialComponents(n,t)}}else if(o.type==="characterData"&&o.target.nodeType===Node.TEXT_NODE){const n=o.target.textContent.trim();if(n.length<3)continue;t[n]&&(o.target.textContent=o.target.textContent.replace(n,t[n]))}},r)}),this.observer.observe(document.body,{childList:!0,subtree:!0,characterData:!0}),console.log("[LanguageManager] DOM observer registered for dynamic translations")}async translateSpecialComponents(e){!e||Object.keys(e).length===0||(this.translateFilesAccordComponents(e),this.translateSimpleFileDisplayComponents(e),this.translateModalComponents(e),this.translateSpecialAttributes(e))}checkAndTranslateSpecialComponents(e,t){var r,s,a;if(e.classList&&(e.classList.contains("files-accord")||e.classList.contains("file-accord-title")||e.classList.contains("file-accord-chlank"))){this.translateFilesAccordComponents(t);return}if(e.classList&&(e.classList.contains("simple-file-display")||(s=(r=e.parentElement)==null?void 0:r.classList)!=null&&s.contains("simple-file-display"))){this.translateSimpleFileDisplayComponents(t);return}e.getAttribute&&(e.getAttribute("role")==="dialog"||(a=e.classList)!=null&&a.contains("modal"))&&this.translateModalComponents(t)}translateFilesAccordComponents(e){document.querySelectorAll(".file-accord-title").forEach(a=>{const o=a.querySelector("span:first-child");o&&e[o.textContent.trim()]&&(o.textContent=e[o.textContent.trim()])}),document.querySelectorAll(".file-accord-chlank .file-desc").forEach(a=>{a&&e[a.textContent.trim()]&&(a.textContent=e[a.textContent.trim()])}),document.querySelectorAll(".files-accord button, .file-accord-chlank button").forEach(a=>{a&&e[a.textContent.trim()]&&(a.textContent=e[a.textContent.trim()])})}translateSimpleFileDisplayComponents(e){document.querySelectorAll(".simple-file-display").forEach(r=>{const s=r.querySelector("h2, h3, h4");s&&e[s.textContent.trim()]&&(s.textContent=e[s.textContent.trim()]),r.querySelectorAll(".file-name").forEach(n=>{n&&e[n.textContent.trim()]&&(n.textContent=e[n.textContent.trim()])}),r.querySelectorAll("button").forEach(n=>{n&&e[n.textContent.trim()]&&(n.textContent=e[n.textContent.trim()])})})}translateModalComponents(e){document.querySelectorAll('.modal, [role="dialog"]').forEach(r=>{const s=r.querySelector(".modal-title, h3, h4, h5");s&&e[s.textContent.trim()]&&(s.textContent=e[s.textContent.trim()]),r.querySelectorAll("button").forEach(n=>{n&&e[n.textContent.trim()]&&(n.textContent=e[n.textContent.trim()])}),r.querySelectorAll("p").forEach(n=>{n&&e[n.textContent.trim()]&&(n.textContent=e[n.textContent.trim()])})})}translateSpecialAttributes(e){document.querySelectorAll("[data-original-title]").forEach(s=>{const a=s.getAttribute("data-original-title");a&&e[a]&&s.setAttribute("data-original-title",e[a])}),document.querySelectorAll("[aria-label]").forEach(s=>{const a=s.getAttribute("aria-label");a&&e[a]&&s.setAttribute("aria-label",e[a])})}showLanguageLoader(e){let t=document.querySelector("#language-loader");if(!e){t&&(t.classList.add("fade-out"),setTimeout(()=>{t&&t.parentNode&&t.parentNode.removeChild(t)},500));return}if(t){t.classList.remove("fade-out");return}const r=document.createElement("div");r.id="language-loader",r.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.3);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
      opacity: 0;
      transition: opacity 0.3s ease;
    `;const s=document.createElement("div");s.style.cssText=`
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 15px rgba(0,0,0,0.2);
      text-align: center;
      display: flex;
      flex-direction: column;
      align-items: center;
    `;const a=document.createElement("div");a.style.cssText=`
      width: 40px;
      height: 40px;
      border: 4px solid #f3f3f3;
      border-top: 4px solid #3498db;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-bottom: 15px;
    `;const o=document.createElement("style");o.textContent=`
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      #language-loader.fade-out {
        opacity: 0 !important;
      }
    `;const n=document.createElement("div");n.textContent="Переключение языка...",n.style.cssText="font-size: 16px; color: #333;",s.appendChild(a),s.appendChild(n),r.appendChild(s),document.head.appendChild(o),document.body.appendChild(r),setTimeout(()=>{r.style.opacity="1"},10)}updateLanguageButtons(){document.querySelectorAll(".lang-btn").forEach(t=>{t.getAttribute("data-lang")===this.currentLanguage?(t.style.backgroundColor="#3b82f6",t.style.color="white"):(t.style.backgroundColor="white",t.style.color="#3b82f6")})}}const m=new f;document.addEventListener("DOMContentLoaded",()=>{m.init()});export{m as default};
