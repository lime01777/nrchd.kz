# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫ —Å const –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ t –≤ JSX —Ñ–∞–π–ª–∞—Ö

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏ —Å const –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ t..." -ForegroundColor Green
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö JSX —Ñ–∞–π–ª–æ–≤
function Get-JSXFiles {
    param([string]$Path)
    
    $files = @()
    Get-ChildItem -Path $Path -Recurse -Include "*.jsx", "*.js" | ForEach-Object {
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–ø–∫–∏
        if ($_.FullName -notmatch "node_modules|\.git|vendor|storage|bootstrap") {
            $files += $_.FullName
        }
    }
    return $files
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞
function Test-FileForErrors {
    param([string]$FilePath)
    
    $content = Get-Content $FilePath -Raw -Encoding UTF8
    $lines = Get-Content $FilePath -Encoding UTF8
    $issues = @()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ layout —Ñ—É–Ω–∫—Ü–∏–∏
    $hasLayout = $content -match "\.layout\s*="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ t –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    $hasTFunction = $content -match "const\s+t\s*=\s*\("
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –≤ layout
    $usesTInLayout = $hasLayout -and ($content -match "\.layout\s*=\s*.*t\(")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ t
    $hasGlobalT = $content -match "const\s+t\s*=\s*\(.*\)\s*=>\s*\{[\s\S]*?window\.__INERTIA_PROPS__"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –≤–Ω–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    $usesTOutsideComponent = $content -match "t\("
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ export default function
    $hasExportDefault = $content -match "export\s+default\s+function"
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
    for ($i = 0; $i -lt $lines.Count; $i++) {
        $line = $lines[$i]
        $lineNumber = $i + 1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –≤ layout —Ñ—É–Ω–∫—Ü–∏–∏
        if ($line -match "\.layout\s*=" -and $line -match "t\(" -and -not $hasGlobalT) {
            $issues += [PSCustomObject]@{
                Line = $lineNumber
                Type = "ERROR"
                Message = "–§—É–Ω–∫—Ü–∏—è t –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ layout, –Ω–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ"
                Code = $line.Trim()
            }
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ t –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        if ($line -match "const\s+t\s*=" -and $hasExportDefault) {
            $issues += [PSCustomObject]@{
                Line = $lineNumber
                Type = "WARNING"
                Message = "–§—É–Ω–∫—Ü–∏—è t –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ - –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å layout"
                Code = $line.Trim()
            }
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        if ($line -match "t\(" -and -not $hasTFunction -and -not $hasGlobalT -and $line -notmatch "//") {
            $issues += [PSCustomObject]@{
                Line = $lineNumber
                Type = "ERROR"
                Message = "–§—É–Ω–∫—Ü–∏—è t –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞"
                Code = $line.Trim()
            }
        }
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞
    if ($hasLayout -and -not $hasGlobalT -and $usesTOutsideComponent) {
        $issues += [PSCustomObject]@{
            Line = "GLOBAL"
            Type = "ERROR"
            Message = "–§–∞–π–ª –∏–º–µ–µ—Ç layout —Ñ—É–Ω–∫—Ü–∏—é –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç t, –Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è t –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞"
            Code = "–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é t"
        }
    }
    
    return [PSCustomObject]@{
        FilePath = $FilePath
        Issues = $issues
        HasLayout = $hasLayout
        HasTFunction = $hasTFunction
        HasGlobalT = $hasGlobalT
        UsesTInLayout = $usesTInLayout
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
$jsxFiles = Get-JSXFiles ".\resources\js"
$results = @()

Write-Host "üìÅ –ù–∞–π–¥–µ–Ω–æ $($jsxFiles.Count) JSX —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏" -ForegroundColor Yellow
Write-Host ""

foreach ($file in $jsxFiles) {
    $result = Test-FileForErrors $file
    if ($result.Issues.Count -gt 0) {
        $results += $result
    }
}

# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
if ($results.Count -eq 0) {
    Write-Host "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã. –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!" -ForegroundColor Green
    exit
}

Write-Host "‚ùå –ù–∞–π–¥–µ–Ω–æ $($results.Count) —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏:" -ForegroundColor Red
Write-Host ""

foreach ($result in $results) {
    $relativePath = $result.FilePath.Replace((Get-Location).Path + "\", "")
    Write-Host "üìÅ $relativePath" -ForegroundColor Cyan
    Write-Host "   Layout: $(if ($result.HasLayout) { '‚úÖ' } else { '‚ùå' })"
    Write-Host "   –ì–ª–æ–±–∞–ª—å–Ω–∞—è t: $(if ($result.HasGlobalT) { '‚úÖ' } else { '‚ùå' })"
    Write-Host "   –õ–æ–∫–∞–ª—å–Ω–∞—è t: $(if ($result.HasTFunction) { '‚úÖ' } else { '‚ùå' })"
    Write-Host "   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –≤ layout: $(if ($result.UsesTInLayout) { '‚úÖ' } else { '‚ùå' })"
    
    foreach ($issue in $result.Issues) {
        $icon = if ($issue.Type -eq "ERROR") { "‚ùå" } else { "‚ö†Ô∏è" }
        Write-Host "   $icon –°—Ç—Ä–æ–∫–∞ $($issue.Line): $($issue.Message)" -ForegroundColor $(if ($issue.Type -eq "ERROR") { "Red" } else { "Yellow" })
        if ($issue.Code -and $issue.Code -ne "–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é t") {
            Write-Host "      –ö–æ–¥: $($issue.Code)" -ForegroundColor Gray
        }
    }
    Write-Host ""
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
$fixableFiles = $results | Where-Object { $_.HasLayout -and $_.UsesTInLayout -and -not $_.HasGlobalT }

if ($fixableFiles.Count -gt 0) {
    Write-Host "üîß –§–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:" -ForegroundColor Green
    foreach ($file in $fixableFiles) {
        $relativePath = $file.FilePath.Replace((Get-Location).Path + "\", "")
        Write-Host "   - $relativePath" -ForegroundColor Yellow
    }
    Write-Host ""
    Write-Host "üí° –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç fix-errors.ps1" -ForegroundColor Blue
}

Write-Host "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
