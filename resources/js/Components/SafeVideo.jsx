import React, { useState } from 'react';

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç DOMException –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –≤–∏–¥–µ–æ-—Ñ–∞–π–ª–æ–≤
 */
export default function SafeVideo({ 
  src, 
  className = '', 
  fallbackContent = null,
  onLoad,
  onError,
  ...props 
}) {
  const [hasError, setHasError] = useState(false);
  const [isLoading, setIsLoading] = useState(true);

  const handleLoad = (e) => {
    setIsLoading(false);
    setHasError(false);
    if (onLoad) {
      onLoad(e);
    }
  };

  const handleError = (e) => {
    console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:', src);
    setIsLoading(false);
    setHasError(true);
    
    if (onError) {
      onError(e);
    }
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å src –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
  const isValidSrc = src && (
    typeof src === 'string' && 
    src.trim() !== '' && 
    (src.startsWith('http') || src.startsWith('/'))
  );
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ blob URL (–º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å CORS –æ—à–∏–±–∫–∏)
  const isBlobUrl = src && typeof src === 'string' && src.startsWith('blob:');
  
  // –ï—Å–ª–∏ —ç—Ç–æ blob URL, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback (–∏–∑–±–µ–≥–∞–µ–º CORS –æ—à–∏–±–æ–∫)
  if (isBlobUrl) {
    console.warn('–û–±–Ω–∞—Ä—É–∂–µ–Ω blob URL –¥–ª—è –≤–∏–¥–µ–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback:', src);
    return (
      <div className={`bg-gray-200 flex items-center justify-center ${className}`}>
        <div className="text-gray-400 text-center">
          <div className="text-4xl mb-2">üé•</div>
          <p className="text-xs">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä</p>
        </div>
      </div>
    );
  }

  if (!isValidSrc) {
    console.warn('–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π src –¥–ª—è –≤–∏–¥–µ–æ:', src);
    return (
      <div className={`bg-gray-200 flex items-center justify-center ${className}`}>
        <div className="text-gray-400 text-center">
          <div className="text-4xl mb-2">üé•</div>
          <p className="text-xs">–í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</p>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback
  if (hasError) {
    if (fallbackContent) {
      return fallbackContent;
    }
    return (
      <div className={`bg-gray-200 flex items-center justify-center ${className}`}>
        <div className="text-gray-400 text-center">
          <div className="text-4xl mb-2">üé•</div>
          <p className="text-xs">–í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</p>
        </div>
      </div>
    );
  }

  return (
    <>
      {isLoading && (
        <div className={`bg-gray-200 flex items-center justify-center ${className}`}>
          <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500"></div>
        </div>
      )}
      <video
        src={src}
        className={`${className} ${isLoading ? 'hidden' : ''}`}
        onLoad={handleLoad}
        onError={handleError}
        {...props}
      />
    </>
  );
}
