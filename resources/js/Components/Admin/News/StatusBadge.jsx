import React from 'react';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–≤–æ—Å—Ç–∏
 */
export default function StatusBadge({ status, className = "" }) {
  const statusConfig = {
    draft: {
      label: '–ß–µ—Ä–Ω–æ–≤–∏–∫',
      className: 'bg-gray-100 text-gray-800',
      icon: 'üìù'
    },
    scheduled: {
      label: '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ',
      className: 'bg-yellow-100 text-yellow-800',
      icon: '‚è∞'
    },
    published: {
      label: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ',
      className: 'bg-green-100 text-green-800',
      icon: '‚úÖ'
    },
    archived: {
      label: '–ê—Ä—Ö–∏–≤',
      className: 'bg-gray-100 text-gray-600',
      icon: 'üì¶'
    }
  };

  // –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  const statusMap = {
    '–ß–µ—Ä–Ω–æ–≤–∏–∫': 'draft',
    '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ': 'scheduled',
    '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ': 'published',
    '–ê—Ä—Ö–∏–≤': 'archived'
  };

  const normalizedStatus = statusMap[status] || status;
  const config = statusConfig[normalizedStatus] || statusConfig.draft;

  return (
    <span className={`inline-flex items-center gap-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${config.className} ${className}`}>
      <span>{config.icon}</span>
      <span>{config.label}</span>
    </span>
  );
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞
 */
export function StatusSelector({ value, onChange, className = "" }) {
  const statuses = [
    { value: 'draft', label: '–ß–µ—Ä–Ω–æ–≤–∏–∫', icon: 'üìù' },
    { value: 'scheduled', label: '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ', icon: '‚è∞' },
    { value: 'published', label: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ', icon: '‚úÖ' },
    { value: 'archived', label: '–ê—Ä—Ö–∏–≤', icon: 'üì¶' }
  ];

  return (
    <select
      value={value}
      onChange={(e) => onChange(e.target.value)}
      className={`block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm ${className}`}
    >
      {statuses.map((status) => (
        <option key={status.value} value={status.value}>
          {status.icon} {status.label}
        </option>
      ))}
    </select>
  );
}
