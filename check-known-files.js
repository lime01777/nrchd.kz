const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const filesToCheck = [
    'resources/js/Pages/Direction/StrategicInitiatives.jsx',
    'resources/js/Pages/Direction/MedicalRating.jsx',
    'resources/js/Pages/Direction/MedicalEducation.jsx',
    'resources/js/Pages/Direction/HumanResources.jsx',
    'resources/js/Pages/Direction/ElectronicHealth.jsx',
    'resources/js/Pages/Direction/MedicalAccreditation.jsx',
    'resources/js/Pages/Direction/HealthRate.jsx',
    'resources/js/Pages/Direction/ClinicalProtocols.jsx',
    'resources/js/Pages/Direction/MedicalScience.jsx',
    'resources/js/Pages/Direction/Bioethics.jsx',
    'resources/js/Pages/Direction/DrugPolicy.jsx',
    'resources/js/Pages/Direction/PrimaryHealthcare.jsx',
    'resources/js/Pages/Direction/HealthAccounts.jsx',
    'resources/js/Pages/Direction/MedicalStatistics.jsx',
    'resources/js/Pages/Direction/DirectionTechCompetence.jsx',
    'resources/js/Pages/Direction/CenterPrevention.jsx',
    'resources/js/Pages/Direction/MedicalTourism.jsx',
    'resources/js/Pages/Direction/QualityCommission.jsx'
];

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏ —Å const –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ t...\n');

let totalIssues = 0;
const results = [];

filesToCheck.forEach(filePath => {
    if (fs.existsSync(filePath)) {
        const content = fs.readFileSync(filePath, 'utf8');
        const issues = [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ layout —Ñ—É–Ω–∫—Ü–∏–∏
        const hasLayout = content.includes('.layout =');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ t –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        const hasTFunction = /const\s+t\s*=\s*\(.*\)\s*=>/.test(content);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –≤ layout
        const usesTInLayout = hasLayout && /\.layout\s*=\s*.*t\(/.test(content);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ t
        const hasGlobalT = /const\s+t\s*=\s*\(.*\)\s*=>\s*\{[\s\S]*?window\.__INERTIA_PROPS__/.test(content);
        
        if (hasLayout && usesTInLayout && !hasGlobalT) {
            issues.push('‚ùå –§—É–Ω–∫—Ü–∏—è t –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ layout, –Ω–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ');
        }
        
        if (hasTFunction && hasLayout) {
            issues.push('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è t –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ - –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å layout');
        }
        
        if (issues.length > 0) {
            results.push({
                file: filePath,
                issues: issues,
                hasLayout,
                hasTFunction,
                hasGlobalT,
                usesTInLayout
            });
            totalIssues += issues.length;
        }
    }
});

if (results.length === 0) {
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–æ—Ä—è–¥–∫–µ!');
} else {
    console.log(`‚ùå –ù–∞–π–¥–µ–Ω–æ ${results.length} —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏:\n`);
    
    results.forEach(result => {
        console.log(`üìÅ ${result.file}`);
        console.log(`   Layout: ${result.hasLayout ? '‚úÖ' : '‚ùå'}`);
        console.log(`   –ì–ª–æ–±–∞–ª—å–Ω–∞—è t: ${result.hasGlobalT ? '‚úÖ' : '‚ùå'}`);
        console.log(`   –õ–æ–∫–∞–ª—å–Ω–∞—è t: ${result.hasTFunction ? '‚úÖ' : '‚ùå'}`);
        console.log(`   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ t –≤ layout: ${result.usesTInLayout ? '‚úÖ' : '‚ùå'}`);
        
        result.issues.forEach(issue => {
            console.log(`   ${issue}`);
        });
        console.log('');
    });
    
    console.log(`üí° –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ ${totalIssues} –ø—Ä–æ–±–ª–µ–º`);
    console.log('üîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—Ç –∂–µ –ø–æ–¥—Ö–æ–¥, —á—Ç–æ –∏ —Å MedicalRating.jsx');
}

console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
